{
	"name": "kristofferkarlaxelekstrand.github.io",
	"version": "1.0.0",
	"description": "Kristoffer Karl Axel Ekstrand's list of workplaces and projects",
	"directories": {
		"doc": "docs"
	},
	"scripts": {
		"dev": "concurrently \"npm run watch\" \"serve docs\"",
		"build": "npm run build:css && npm run build:js && npm run build:html && npm run build:static",
		"build:css": "sass src/styles:docs/styles --style=expanded && postcss docs/styles/main.css --replace --config postcss.config.js",
		"build:js": "babel src/scripts --out-dir docs/scripts --presets=@babel/preset-env && terser docs/scripts/app.js -o docs/scripts/app.js --compress --mangle",
		"build:html": "cp src/index.html docs/index.html && html-minifier-terser --input-dir docs --output-dir docs --file-ext html --collapse-whitespace --remove-redundant-attributes --minify-js --minify-css",
		"build:static": "npm run build:sw && node -e \"const fs = require('fs'); const path = require('path'); ['robots.txt', 'site.webmanifest', 'sitemap.xml'].forEach(file => { try { fs.copyFileSync(path.join('static', file), path.join('docs', file)); console.log('Copied', file); } catch(e) { console.log('Failed to copy', file, e.message); } }); fs.copyFileSync(path.join('docs', 'sw.js'), path.join('static', 'sw.js')); console.log('Updated static/sw.js with new cache name'); if (!fs.existsSync('docs/fav')) fs.mkdirSync('docs/fav', { recursive: true }); fs.readdirSync('static/fav').forEach(file => { try { fs.copyFileSync(path.join('static/fav', file), path.join('docs/fav', file)); console.log('Copied fav/' + file); } catch(e) { console.log('Failed to copy fav/' + file, e.message); } });\"",
		"build:sw": "node build/build-service-worker.js",
		"favicon:build": "node build/build-favicons-sharp.js",
		"watch": "concurrently \"npm run watch:css\" \"npm run watch:js\"",
		"watch:css": "sass --watch src/styles:docs/styles",
		"watch:js": "babel src/scripts --out-dir docs/scripts --presets=@babel/preset-env --watch",
		"test": "jest",
		"clean": "rm -rf docs/styles docs/scripts docs/index.html docs/robots.txt docs/sitemap.xml docs/site.webmanifest",
		"size": "ls -la docs/ && echo '--- File sizes ---' && du -sh docs/* || echo 'Build docs/ first with npm run build'",
		"pretty": "prettier --write \"src/**/*.{js,scss}\" \"*.md\"",
		"lint": "npm run lint:css && npm run lint:md",
		"lint:css": "stylelint **/*.scss --fix",
		"lint:md": "markdownlint *.md reference/*.md --fix",
		"lighthouse": "lighthouse https://kristofferkarlaxelekstrand.github.io --output html --output-path ./lighthouse/lighthouse-report.html",
		"audit": "npm run build && npm run lighthouse"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/KristofferKarlAxelEkstrand/kristofferkarlaxelekstrand.github.io"
	},
	"keywords": [
		"Kristoffer",
		"Ekstrand",
		"Waveforms",
		"JavaScript",
		"Design",
		"Code",
		"Text",
		"Sound",
		"Web Development",
		"UX Design",
		"Music Technology"
	],
	"author": "Kristoffer Ekstrand",
	"license": "ISC",
	"devDependencies": {
		"@babel/cli": "^7.28.3",
		"@babel/core": "^7.28.4",
		"@babel/preset-env": "^7.28.3",
		"autoprefixer": "^10.4.21",
		"concurrently": "^9.2.1",
		"cssnano": "^7.1.1",
		"html-minifier-terser": "^7.2.0",
		"jest": "^30.1.3",
		"jest-environment-jsdom": "^30.1.2",
		"lighthouse": "^12.8.2",
		"markdownlint": "^0.35.0",
		"markdownlint-cli": "^0.42.0",
		"postcss": "^8.5.6",
		"postcss-cli": "^11.0.1",
		"prettier": "^3.6.2",
		"sass": "^1.92.1",
		"serve": "^14.2.5",
		"sharp": "^0.34.3",
		"stylelint": "^16.23.1",
		"stylelint-order": "^7.0.0",
		"terser": "^5.44.0"
	}
}
